on:
  workflow_dispatch:
    inputs:
      build_number:
        description: "Build number"
        required: true
        default: ""

name: Build images to ECR

jobs:
  deploy_back:
    name: Deploy Back
    runs-on: ubuntu-latest

    steps:
      - name: Display build number
        run: echo "Deploying build back ${{ github.event.inputs.build_number }} to dev"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 205816504133.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: nerengo_back
        run: |
          # Build a docker container and push it back to ECR 
          cd back
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.event.inputs.build_number }} .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.event.inputs.build_number }}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.event.inputs.build_number }}"

      - uses: actions/checkout@v2
      - name: Deploy back in EC2
        env:
          BACK_PORT: ${{ secrets.BACK_PORT  }}
          DATABASE_URL: ${{ secrets.DATABASE_URL  }}
          SECRET_KEY: ${{ secrets.DATABASE_SECRET_KEY  }}
          AWS_REGION: ${{ secrets.AWS_REGION  }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_FOLDER: ${{ secrets.AWS_FOLDER }}
          AWS_PUBLIC_URL: ${{ secrets.AWS_PUBLIC_URL }}

          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          EC2_INSTANCE_HOST: ${{ secrets.EC2_INSTANCE_HOST  }}
          EC2_INSTANCE_USERNAME: ${{ secrets.EC2_INSTANCE_USERNAME  }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

        run: |
          echo "$AWS_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} '

            #Now we have got the access of EC2 and we will start the deploy .
            cd /home/ubuntu/app/energeo &&

            docker stop energeo_back_prod &&

            docker run \
              --rm \
              -d \
              -p 2992:3000 \
              --name energeo_back_prod \
              -e BACK_PORT=${BACK_PORT} \
              -e DATABASE_URL=${DATABASE_URL} \
              -e SECRET_KEY=${SECRET_KEY} \
              -e AWS_REGION=${AWS_REGION} \
              -e AWS_BUCKET=${AWS_BUCKET} \
              -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
              -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
              -e AWS_FOLDER=${AWS_FOLDER} \
              -e AWS_PUBLIC_URL=${AWS_PUBLIC_URL} \
              -e GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID} \
              205816504133.dkr.ecr.us-east-1.amazonaws.com/nerengo_back:${{ github.event.inputs.build_number }}
          '

  deploy_front:
    name: Deploy Front
    runs-on: ubuntu-latest

    steps:
      - name: Display build number
        run: echo "Deploying build front ${{ github.event.inputs.build_number }} to dev"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 205816504133.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: energeo_front
        run: |
          # Build a docker container and push it front to ECR 
          cd front
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.event.inputs.build_number }} .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.event.inputs.build_number }}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.event.inputs.build_number }}"

      - uses: actions/checkout@v2
      - name: Deploy front in EC2
        env:
          FRONT_PORT: ${{ secrets.FRONT_PORT  }}
          NODE_ENV: production
          BACK_URL: ${{ secrets.BACK_URL  }}
          DATABASE_URL: ${{ secrets.DATABASE_URL  }}
          SECRET_KEY: ${{ secrets.DATABASE_SECRET_KEY  }}
          AWS_REGION: ${{ secrets.AWS_REGION  }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_FOLDER: ${{ secrets.AWS_FOLDER }}
          AWS_PUBLIC_URL: ${{ secrets.AWS_PUBLIC_URL }}

          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          EC2_INSTANCE_HOST: ${{ secrets.EC2_INSTANCE_HOST  }}
          EC2_INSTANCE_USERNAME: ${{ secrets.EC2_INSTANCE_USERNAME  }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${EC2_INSTANCE_USERNAME}@${EC2_INSTANCE_HOST} '

            #Now we have got the access of EC2 and we will start the deploy .
            cd /home/ubuntu/app/energeo &&

            docker stop energeo_front_prod &&

            docker run \
              --rm \
              -d \
              -p 2992:3000 \
              --name energeo_front_prod \
              -e FRONT_PORT=${FRONT_PORT} \
              -e NODE_ENV=${NODE_ENV} \
              -e BACK_URL=${BACK_URL} \
              -e GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID} \
              205816504133.dkr.ecr.us-east-1.amazonaws.com/energeo_front:${{ github.event.inputs.build_number }}
          '
